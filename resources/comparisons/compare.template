library(ggplot2)
library(reshape)
in_files = {{{in-files}}}
ldf = lapply(in_files, read.table, header=TRUE, stringsAsFactors=FALSE)
df = do.call(rbind, ldf)
fc_plot = {{{fc-plot}}}
expr_plot = {{{expr-plot}}}
pval_plot = {{{pval-plot}}}
out_dir =  {{{out-dir}}}

df$log10expr = log(df$expr + 1)
complete = df[complete.cases(df),]
melted = melt(complete, id=c("algorithm", "id", "project"))

pair_plot = function(var, out_file) {
    casted = cast(subset(melted, variable ==var), id  ~ algorithm + variable)
    rownames(casted) = casted$id
    casted$id = NULL
    p = plotmatrix(casted)
    ggsave(filename=out_file, plot=p)
    return(p)
}

pair_plot("padj", pval_plot)
pair_plot("logFC", fc_plot)
pair_plot("log10expr", expr_plot)
    

jaccard = function(df, column, cutoff=0.05) {
    algorithms = unique(df$algorithm)
    sig = list()
    for(alg in algorithms) {
        sig[alg] = list(subset(df, algorithm == alg & df[,column] < cutoff)$id)
    }
    ji = list()
    for(alg in algorithms) {
        for(alg2 in algorithms) {
            if (alg == alg2) next
            algs = sort(c(alg, alg2))
            alg1 = algs[1]
            alg2 = algs[2]
            comparison = paste(alg1, "_vs_", alg2, sep="")
            alg_intersection = intersect(sig[alg1][[1]], sig[alg2][[1]])
            alg_union = union(sig[alg1][[1]], sig[alg2][[1]])
            ji[comparison] = length(alg_intersection) / length(alg_union)
        }
    }
    return(data.frame(ji))
}

ji = jaccard(df, "padj")
write.table(ji, file.path(out_dir, "jaccard.tsv"), quote=FALSE, row.names=FALSE, sep="\t")

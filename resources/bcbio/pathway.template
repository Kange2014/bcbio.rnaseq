## Pathway analysis

```{r pathway-load-libraries}
orgdb = {{{orgdb}}}
biomart_dataset = {{{biomart-dataset}}}
keggname = {{{keggname}}}
library(dplyr)
library(clusterProfiler)
library(orgdb, character.only=TRUE)
library(biomaRt)
```

```{r biomaRt-entrez}
mart = biomaRt::useMart(biomart = "ensembl", dataset=biomart_dataset)
entrez = biomaRt::getBM(attributes = c("ensembl_gene_id", "entrezgene"), mart=mart)
entrez$entrezgene = as.character(entrez$entrezgene)
```

```{r go-function}
summarize_cp = function(res, comparison) {
  summaries = data.frame()
  for(ont in names(res)) {
     ontsum = summary(res[[ont]])
     ontsum$ont = ont
     summaries = rbind(summaries, ontsum)
  }
  summaries$comparison = comparison
  return(summaries)}

enrich_cp = function(res, comparison) {
  res = res %>%
    data.frame() %>%
    tibble::rownames_to_column() %>%
    left_join(entrez, by=c("rowname"="ensembl_gene_id")) %>%
    filter(!is.na(entrezgene))
  universe = res$entrezgene
  genes = subset(res, padj < 0.05)$entrezgene
  mf = enrichGO(genes, universe=universe,
                OrgDb=orgdb,
                ont="MF",
                pAdjustMethod="BH",
                qvalueCutoff=1,
                pvalueCutoff=1)
  cc = enrichGO(genes, universe=universe,
                OrgDb=orgdb,
                ont="CC",
                pAdjustMethod="BH",
                qvalueCutoff=1,
                pvalueCutoff=1)
  bp = enrichGO(genes, universe=universe,
                OrgDb=orgdb,
                ont="BP",
                pAdjustMethod="BH",
                qvalueCutoff=1,
                pvalueCutoff=1)
  kg = enrichKEGG(gene=genes, universe=universe,
                  organism='mmu',
                  pvalueCutoff=1,
                  qvalueCutoff=1,
                  pAdjustMethod="BH")
  all = list(mf=mf, cc=cc, bp=bp, kg=kg)
  all[["summary"]] = summarize_cp(all, comparison)
  return(all)}
```

```{r gsea-function}
gsea_cp = function(res, comparison) {
  res = res %>%
    data.frame() %>%
    tibble::rownames_to_column() %>%
    left_join(entrez, by=c("rowname"="ensembl_gene_id")) %>%
    filter(!is.na(entrezgene)) %>%
    filter(!is.na(log2FoldChange)) %>%
    filter(!is.na(lfcSE))
  lfc = data.frame(res)[, "log2FoldChange"]
  lfcse = data.frame(res)[, "lfcSE"]
  genes = lfc/lfcse
  names(genes) = res$entrezgene
  genes = genes[order(genes, decreasing=TRUE)]
  cc = gseGO(genes, ont="CC", OrgDb=orgdb,
             nPerm=500, pvalueCutoff=1, pAdjustMethod="BH",
             verbose=TRUE)
  mf = gseGO(genes, ont="MF", OrgDb=orgdb,
             nPerm=500, pvalueCutoff=1, pAdjustMethod="BH",
             verbose=TRUE)
  bp = gseGO(genes, ont="bp", OrgDb=orgdb,
             nPerm=500, pvalueCutoff=1, pAdjustMethod="BH",
             verbose=TRUE)
  genes = data.frame(res)[, "log2FoldChange"]
  names(genes) = res$entrezgene
  genes = genes[order(genes, decreasing=TRUE)]
  genes = genes[!is.na(genes)]
  kg = gseKEGG(geneList=genes, organism=keggname, nPerm=500,
               pvalueCutoff=1, verbose=TRUE)
  if(orgdb == "org.Hs.eg.db") {
    do = summary(gseDO(geneList=genes, nPerm=500, pvalueCutoff=1,
                       pAdjustMethod="BH", verbose=TRUE))
    do$ont = "DO"
    all = list(mf=mf, cc=cc, bp=bp, kg=kg, do=do)
  }
  else {
    all = list(mf=mf, cc=cc, bp=bp, kg=kg)
  }
  all[["summary"]] = summarize_cp(all, comparison)
  return(all)}

convert_enriched_ids = function(res, entrezsymbol) {
  res = res %>%
    mutate(geneID=strsplit(as.character(geneID), "/")) %>%
    tidyr::unnest(geneID) %>%
    left_join(entrezsymbol, by=c("geneID"="entrezgene")) %>%
    group_by(ID, Description, GeneRatio, BgRatio, pvalue, p.adjust, qvalue,
            Count, ont, comparison) %>%
    summarise(geneID=paste(geneID, collapse="/"),
              symbol=paste(mgi_symbol, collapse="/"))
  return(res)}
```
